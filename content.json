{"pages":[],"posts":[{"title":"TIL_190401","text":"1일차(0401) HTML / CSS 강의 및 공부 html의 기본 구조 시맨틱 마크업 박스 모델 XMLXML은 Extensible Markup Language의 약자이며, W3C에서 개발된 표준 권고안 마크업 언어이다. XML은 데이터를 저장하고 전달할 목적으로만 만들어졌습니다. HTML과 다르게 미리 정의되어 있는 구조가 아닌, 사용자가 직접 정의해서 사용할 수 있습니다. HTML 4.01 vs HTML 5.0WHATWGWeb Hypertext Application Technology Working Group의 약자로 인터넷이 보급화 되면서, 무분별한 웹 형식과 액티브 X같은 플러그인으로 인해 웹 페이지가 무거워 졌습니다. 그래서 W3C에서 제안한 표준안으로 만들어진 그룹이다. HTML 기본 구조3단 Structure < html > < head > < /head > < body > (content) < /body > < footer > < /footer > < /html > 4단 Structure < html > < head > < /head > < nav > < /nav > < body > (content) < /body > < footer > < /footer > < /html > 선형화 단계 (Linearization Step)논리적으로 HTML을 구성하기 위해 마크업은 규칙에 따라 콘텐츠를 설계하는 단계이다. 선형화 단계를 거치면 전체적은 웹 페이지에 구성을 보기 쉽게 정리할 수 있고, CSS 작업시 좀더 간결한 작업을 할 수 있다. 시맨틱 요소 (Semantic Element)&lt; header &gt;&lt;div id=”header”&gt; &lt;header class=&quot;header&quot;&gt; header는 html 문서에 첫 머리말로 사용이 가능하여 여러번 사용이 가능하다. 즉 section, body 안에 header을 사용하여 구분을 짓기 위해 사용이 가능하다. &lt; footer &gt;&lt;div id=&quot;footer&quot;&gt; &lt;footer class=&quot;footer&quot;&gt; Webpage의 Copyright이나 회사 주소 정보를 사용 할 수 있다.section에 꼬리말로 사용하고 html 내에서 다수 사용이 가능하다. &lt; section &gt;&lt;div id=&quot;section&quot; class=&quot;section&quot;&gt;&lt;/div&gt; &lt;section id=&quot;#&quot; class=&quot;#&quot;&gt;&lt;/section&gt; 콘텐츠를 grouping 할 때 사용. Section 안에 section을 사용 할 수 있어서 중첩 사용이 가능하다. &lt; nav &gt;&lt;div id=&quot;nav&quot; class=&quot;nav&quot;&gt;&lt;/div&gt; &lt;nav id=&quot;#&quot; class=&quot;#&quot;&gt;&lt;/nav&gt; Navigation의 줄임말. navigation 메뉴를 나타낸다. 주로 헤딩 부분에 사용하지만, body 내부에 navigation 섹션에도 사용이 가능하다. &lt; article &gt;&lt;div id=&quot;article&quot; class=&quot;article&quot;&gt;&lt;/div&gt; &lt;article id=&quot;#&quot; class=&quot;#&quot;&gt;&lt;/article&gt; 독립적인 글들을 나타낼 때 사용. 블로그 포스팅 표현 할 때 사용하지만, RSS feed로 배포할 가치가 있는 컨텐츠에 사용한다. &lt; aside &gt;&lt;div id=&quot;aside&quot; class=&quot;aside&quot;&gt;&lt;/div&gt; &lt;aside id=&quot;#&quot; class=&quot;#&quot;&gt;&lt;/aside&gt; 콘텐츠와 관계 있는 부가 정보들을 표시 할 때 사용한다. 주로 side-bar콘텐츠들을 담기 위해 사용하기도 한다. &lt; main &gt;&lt;div id=&quot;main&quot; class=&quot;main&quot;&gt;&lt;/div&gt; &lt;main id=&quot;#&quot; class=&quot;#&quot;&gt;&lt;/main&gt; 주로 웹 페이지를 구성하는 메인 콘텐츠를 담는 태그이다. body 태그를 사용하여 구분할 수 있다. HTML 네이밍[selector] id스타일을 지정할 때 한 가지만 지정해서 사용한다. ( # selector)하나의 문서에 고유한 id 하나밖에 쓸 수 없다. class그룹으로 묶어서 스타일을 지정할 때 사용한다. ( . selector) = id / class는 숫자로 시작해서는 안된다. WAI-ARIA CSS - Box model normal flow flex float clear Pseudo-Element(가상요소) ::before, ::after, :hover","link":"/2019/04/01/TIL-190401/"},{"title":"TIL-190403-git blog 시작하기","text":"Hexo git blog 시작하기Node 설치Hexo를 사용하려면 Node 설치가 필요하다. 여기 를 통해 다운로드가 가능하다. Hexo 설치Command를 통해 해당 디렉토리에 명령어를 통해 설치하기 $ npm install hexo-cli -g 만약 설치를 하지 못한다는 에러 메세지가 출력 된다면 앞에 “sudo”를 붙여 보자. Hexo 초기 설정$ Hexo init (folder name) $ cd (folder name) $ npm install Blog 파일로 접속Hero new post “제목“Hero generateHero serverHero deploy 원하는 폴더에서 Hexo init [blog]Npm installHexo new post “#”","link":"/2019/04/03/TIL-190403-git-blog-시작하기/"},{"title":"TIL-190404","text":"3일차(0404) nav 한 페이지에 2~3개 정도가 적당 메인메뉴임을 알 수 있도록 으로 제목 넣어줄 것(section, article 동일) gradient background 속성 중 하나 linear-gradient() text-shadow white-space nowrap background-position animation - @keyframe","link":"/2019/04/04/TIL-190404/"},{"title":"TIL-190402","text":"2일차(0402) CSS 기초 상속의 이해 겹침의 개념 우선순위 레이아웃 position float display DOM Tree란? 선택자 파워 element &lt; class &lt; id &lt; inline-style Color Font font-size, font-weight, font-variant, line-height(특징 알기), font-family 브라우저별 지원 형식이 다름 rem, em, px 차이 알아보기 Table Position relative, absolute, fixed, sticky 각각의 특징 알기 브라우저 접두사 -webkit, -ms, -o, -moz","link":"/2019/04/02/TIL-190402/"},{"title":"TIL-190405","text":"4일차(0405) form fields legend label (input 요소에 for 속성으로 연결) a tag(title, target, a 태그의 중요성) text-indent letter-spacing clearfix(모듈) .clearfix::after {content: “”; display: block; clear: both;}","link":"/2019/04/05/TIL-190405/"},{"title":"TIL-190410-html markup 설계하기 ","text":"HTML - basicHTML이란?Hyperlink text Markup Language 약자로 웹 페이지를 구성하는 틀에 역활을 한다. 웹 디자인 인지 사항HTML는 단지 외관적으로 뿐만 아니라 내부적으로 관리가 용이하고, 간결한 CSS 설계를 위해 많은 신경을 써야 한다. 또한 많은 스타트업은 빠른 성장을 위해 웹 페이지 디자인에 접근성을 놓치는 일이 많다. 그러나 요즘 대기업, 혹은 해외 기업과 스타트업들은 장애인에 접근성을 높이기 위해 노력하는 일이 늘어나고 있다. 웹 표준 (Web Standard)W3C (World Wide Consortium)에서 정의하는 기술 표준을 말한다. 사용성과 접근성에 더 높은 초점을 가지고 웹 계발과 다양한 환경에 사용자의 이용을 보장한다. 웹 접근성 (Web Accessibility)모든 환경에 사용자에게 같은 서비스 제공하며 이용에 차별이 없도록 보장하는 것. 주로 시각, 마우스를 사용하지 못하는 장애인을 위해 제공 되며, 오디오로 웹에 전반적은 정보를 오디오로 제공한다 Head Part언어 인코딩&lt;meta charset=&quot;utf-8&quot;&gt; 태그 위에 선언해야 적용이 된다. charset (인코딩 설정) 해당문서가 어떤 언어로 인코딩 되었는지 알려준다. utf-8은 HTML5 방식으로 표기하는 방법이다. 통상 설정을 하지 않아도 작동이 되지만, 미 설정시 언어 글자가 깨져서 나오는 경우가 많다. html 언어 설정&lt;html lang=&quot;ko-KR&quot;&gt; &lt;/html&gt; 웹 접근성을 지침으로 안에 페이지의 기본 언어를 선언한다. Screen Reader 프로그램이 언어를 인식하여 자동으로 음성을 변환하거나 해당 언어에 적합한 발음을 제공한다. 시각장애인을 위한 보조 속성으로 command + f5를 누르면 실행된다. Ko을 사용하는 경우 영어를 기본적으로 제공 하지만, En은 한글 자동 변환을 지원하지 않는다. [selector] id스타일을 지정할 때 한 가지만 지정해서 사용한다. ( # selector)하나의 문서에 고유한 id 하나밖에 쓸 수 없다. class룹으로 묶어서 스타일을 지정할 때 사용한다. ( . selector) = id / class는 숫자로 시작해서는 안된다. [Multi selector] 자식 selector: [ &gt; ]~안에의 의미로 &gt; 만 사용이 가능하며 왼쪽이 부모 혹은 더 큰 selector을 넣는다.Ex) div &gt; p (div 안에 P만 선택) 후손 tag: [ space ]~안에 있는 A 모두를 선택 할 때 사용한다.Ex) div p (div 안에 P모두 선택) 그룹selector: , 다수에 selector에 공통된 스타일을 주고 싶을 경우 사용한다.Ex) div, p, a (div, p, a 모두) 특정 id 값: [ selector.id ]~안에 A 특정 태그 선택.Ex) p.foo (p태그 안에 id=”foo”을 가진 요소 선택) [Web page 설계 방식]3단 구조: header, body(content), footer4단 구조: header, navigation ,body(content), footer 1.선형화 단계화면 구성 나누기 2.시멘틱 요소그룹화 하기 3.Naming파스칼 첫 대문자카멜 첫 소문자 두번째 대문자 a. aside = 부가 정보b. article = 독립적인 , section = 콘텐츠 블록 Markup","link":"/2019/04/10/TIL-190410-html-markup-설계하기/"},{"title":"TIL-190408","text":"5일차(0408) dl, dt, dd display: flex 크로스브라우징의 중요성 HTML5 Shiv - WEBDIR :: HTML5 Shiv - HTML5 요소 크로스브라우징","link":"/2019/04/08/TIL-190408/"},{"title":"TIL-190409","text":"6일차(0409) 날짜 정의 datetime 속성 - 필수 속성, 컴퓨터가 날짜를 확인 text-overflow overflow: hidden, white-space: nowrap 함께 써야 함 defer 속성 removeClass addClass e.keycode https://keycode.info/","link":"/2019/04/09/TIL-190409/"},{"title":"TIL-190412","text":"8일차(0412) ol q footer - article 내부에도 사용 가능 :hover 특징 counter() - counter(name, style) - name: 카운터 이름 - style: 기본값(생략)은 십진수(decimal), list-style-type과 동일한 값 * disc, circle, square, decimal, decimal-leading-zero, lower-roman, upper-roman, lower-greek, lower-latin, upper-latin, armenian, georgian, lower-alpha, upper-alpha, or none.","link":"/2019/04/12/TIL-190412/"},{"title":"TIL-190415","text":"9일차(0415) &lt;a href=&quot;mailto:code.ameba@gmail.com&quot;&gt;code.ameba@gmail.com&lt;/a&gt; 클릭 시 메일 작성 창 열림 `&lt;a href=“tel:01026840242”&gt;Tel-&gt; 모바일 환경에서 전화걸기 링크 &lt;header&gt;와 &lt;footer&gt;는 어디에나 들어갈 수 있다.(메인, 아티클, 섹션 등등) 푸터는 제목이 필요 없다 푸터의 주소에는 &lt;address&gt; 태그 사용 &lt;small&gt;: 주변 글자보다 작게 &lt;big&gt;: 주변 글자보다 크게 &amp;copy; 저작권 표시 반응형 웹 마크업이 심플해야 함 RWD(반응형) vs AWD(적응형) Flexible web design 다양한 패턴이 존재 desk top first vs mobile first 디바이스의 성능저하 고려해야 함 px 단위는 지양, %, vh 등의 비율 단위 지향 media queries @ : 앳사인 프린트용 CSS 별도 제작 및 연결 가능 모바일 세로 모드: 포트레이트 / 가로 모드: 랜드스케이프 sass(css 전처리기) 최근에는 scss를 더 많이 쓰는 편 img {max-width: 100%;height: auto;}` 모바일 환경에 맞는 아트디렉션 필요(단순히 사이즈를 줄이는 게 아닌 적절한 크롭) &lt;img src=&quot;#&quot; srcset=&quot;&quot;&gt; , &lt;picture&gt;, &lt;source&gt; 디바이스에 따른 조정 가능 @media screen device-pixel-ratio html shiv break point : 반응형에서 너비가 바뀌는 지점? padding 백분율은 가로 사이즈 기준.","link":"/2019/04/15/TIL-190415/"},{"title":"TIL-190411","text":"7일차(0411) article figure img alt , transition","link":"/2019/04/11/TIL-190411/"},{"title":"TIL-190416","text":"10일차(0416) picture, srcset 등으로 기기별 적절한 이미지 사이즈 적용 가능 반응형 배경이미지 https://webdir.tistory.com/81https://keycode.info/","link":"/2019/04/16/TIL-190416/"},{"title":"TIL-190417","text":"1일차 (컴퓨터 공학)파이선 언어란? 자료구조 / 알고리즘 Recursion 재귀Binary searchIndexSortStackHeap (segmentation) call by value call by reference 자바 스크립트는Single threaded =&gt; single call stackNon-blockingAsynchronousConcurrentCall stack / printSquare Function foo/ bar/ bez Blocking = 느리게 동작하는 코드 SetTimeout 32bit vs 64bit0, 1 = bit 차이점 와이어 갯수 메모리 주소값 정수 (integer)의 표현 일반적으로 1 바이트, 2바이트, 4바이트, 8바이트에 저장 부호 있는 정수(signed)와 부호 없는 정수(unsigned)로 나뉜다. 부호가 있는 경우 첫 bit가 부호를 나타냄(0: 양수, 1:음수)","link":"/2019/04/17/TIL-190417/"},{"title":"TIL-190418","text":"2일차 (0418)프로그래머는 함수를 통해서 추상적인 함수 (function routine procedural, sub-routine)Procedural -programming = 절차 지향 객체(object) =&gt; OOP (object oriented programming) 객체지향 함수 (function)=&gt; function signature or interface함수 이름, 매개변수, 결과값(반환) =&gt; 내부 구현 (implantation) Function name = 함수가 어떤 일을 하는지 명확하게 나타낸다. 매개 변수, returna. 기능 명세 = 어떤 구조, 어떤 기술, 방식으로 설계할지 설계 (인터페이스 설계) Mantissa 52bit 는 정밀도를 말한다. 52 bit가 넘으면 에러로 정수로 떨어지지 않는다. Command =&gt; sys.float_info.mant_dig5353이 나오는 이유는 1.000000…앞에 1이 무조건 적으로 등장하기 때문에 1일 생략하여 mantissa에 52bit 에서 1bit를 초과하여 보여준다.","link":"/2019/04/18/TIL-190418/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/04/17/hello-world/"},{"title":"TIL-190419","text":"3일차 (0419)Jupyter Jupyter notebookNew =&gt; python3 A=10A=이름 객체 (변수) variable10=값 객체 파이선에는 box 모델이 적용 되지 않음 모든 것이 객체 언어 추상화어셈블리어 = 하드웨어 의존적 = low levelC/ C++ = 메모리를 직접 할당, 해제 = unmanaged languageJava/ C# = 언어 자체가 메모리를 할당 해제 =&gt; 가비지 컬랙션Python/ javascript = 자료형에 자유로워짐 = high level language =&gt; 생산성이 좋다 부동 소수점 (floating point)고정 소수점 (fixed point) mutable object(변수 가능객체) 리스트 딕셔너리 집합immutable object(변경불가능객체) 정수, 상수 문자열 튜플","link":"/2019/04/19/TIL-190419/"},{"title":"HOW TO START GIT COOPERATIVE WORK.","text":"Repository 만들기 깃을 가입합니다. 오른쪽 상단에서 “Your Profile”을 클릭하면 자신의 계정에 프로필로 들어갑니다. 자신에 프로필 페이지에서 다양한 세팅을 할 수 있지만 프로젝트 진행을 위해 “Repositories”에 들어갑니다. Repositories”에서 초록색 UI “NEW”을 눌러 새로운 Repositories”을 생성해줍니다. 가장먼저 자신에 유저 아이디를 볼 수 있습니다.a. 옆에 Repositories”, 프로젝트 이름을 입력해줍니다.b. 초록색 체크 박스가 나타나면, 사용이 가능한 이름입니다.c. 가장 먼저, 프로젝트의 설명과 제작 방식 등을 기입 할 수 있는 “README.md” 파일을 만들기 위해 “Initialize this repository with a README”을 선택해줍니다.d. 추가로 “Description”에 프로젝트에 간단한 설명을 넣어 줍니다. 성공적으로 “Repositories”을 생성하고 프로젝트를 시작할 준비가 되었습니다. ‘Repositories”을 들어가면 “README” 파일이 생성된 것을 볼 수 있습니다.","link":"/2019/04/18/git-협업-프로젝트-시작하기/"}],"tags":[{"name":"html, web","slug":"html-web","link":"/tags/html-web/"}],"categories":[{"name":"TIL","slug":"TIL","link":"/categories/TIL/"},{"name":"Project","slug":"Project","link":"/categories/Project/"},{"name":"drunk_code 협업 Project","slug":"Project/drunk-code-협업-Project","link":"/categories/Project/drunk-code-협업-Project/"}]}