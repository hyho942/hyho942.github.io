{"pages":[],"posts":[{"title":"HOW TO START GIT BLOG","text":"Hexo git blog 시작하기Node 설치Hexo를 사용하려면 Node 설치가 필요하다. 여기 를 통해 다운로드가 가능하다. Hexo 설치Command를 통해 해당 디렉토리에 명령어를 통해 설치하기 $ npm install hexo-cli -g 만약 설치를 하지 못한다는 에러 메세지가 출력 된다면 앞에 “sudo”를 붙여 보자. Hexo 초기 설정$ Hexo init (folder name) $ cd (folder name) $ npm install Blog 파일로 접속Hero new post “제목“Hero generateHero serverHero deploy 원하는 폴더에서 Hexo init [blog]Npm installHexo new post “#”","link":"/2019/04/17/git/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/04/17/hello-world/"},{"title":"HOW TO START GIT COOPERATIVE WORK.","text":"Repository 만들기 깃을 가입합니다. 오른쪽 상단에서 “Your Profile”을 클릭하면 자신의 계정에 프로필로 들어갑니다. 자신에 프로필 페이지에서 다양한 세팅을 할 수 있지만 프로젝트 진행을 위해 “Repositories”에 들어갑니다. Repositories”에서 초록색 UI “NEW”을 눌러 새로운 Repositories”을 생성해줍니다. 가장먼저 자신에 유저 아이디를 볼 수 있습니다.a. 옆에 Repositories”, 프로젝트 이름을 입력해줍니다.b. 초록색 체크 박스가 나타나면, 사용이 가능한 이름입니다.c. 가장 먼저, 프로젝트의 설명과 제작 방식 등을 기입 할 수 있는 “README.md” 파일을 만들기 위해 “Initialize this repository with a README”을 선택해줍니다.d. 추가로 “Description”에 프로젝트에 간단한 설명을 넣어 줍니다. 성공적으로 “Repositories”을 생성하고 프로젝트를 시작할 준비가 되었습니다. ‘Repositories”을 들어가면 “README” 파일이 생성된 것을 볼 수 있습니다.","link":"/2019/04/18/git-협업-프로젝트-시작하기/"}],"tags":[],"categories":[]}